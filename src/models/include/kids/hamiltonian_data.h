#pragma once

#ifndef HamiltonianData_H
#define HamiltonianData_H

#include <tuple>

//-----------------------------------------------------------------------------
// for FMO

using HsysDataType = std::tuple<const std::size_t, const std::vector<double>, const std::string>;

// clang-format off
const HsysDataType HFMO_data = HsysDataType(
7,
{
12410.00,    -87.70,      5.50,     -5.90,      6.70,    -13.70,     -9.90,
  -87.70,  12530.00,     30.80,      8.20,      0.70,     11.80,      4.30,
    5.50,     30.80,  12210.00,    -53.50,     -2.20,     -9.60,      6.00,
   -5.90,      8.20,    -53.50,  12320.00,    -70.70,    -17.00,    -63.60,
    6.70,      0.70,     -2.20,    -70.70,  12480.00,     81.10,     -1.30,
  -13.70,     11.80,     -9.60,    -17.00,     81.10,  12630.00,     39.70,
   -9.90,      4.30,      6.00,    -63.30,     -1.30,     39.70,  12440.00
},
"cm^-1"
);

// for singlet-fission

const HsysDataType HSF3a_data = HsysDataType(
3,
{// S1       CT        TT
  0.20,      -0.05,      0.00,
 -0.05,       0.30,     -0.05,
  0.00,      -0.05,      0.00
},
"eV"
);

const HsysDataType HSF3b_data = HsysDataType(
3,
{// S1       CT        TT
  0.00,      -0.05,      0.00,
 -0.05,       0.30,     -0.05,
  0.00,      -0.05,      0.18
},
"eV"
);

const HsysDataType HSF5a_data = HsysDataType(
5,
{// S1S0      CA         TT         AC          S0S1
  0.250,      0.116,     0.000,     0.145,      0.000,
  0.116,      0.500,    -0.152,     0.000,      0.145,
  0.000,     -0.152,     0.000,     0.133,      0.000,
  0.145,      0.000,     0.133,     0.500,      0.116,
  0.000,      0.145,     0.000,     0.116,      0.250,
},
"eV"
);

const HsysDataType HSF5b_data = HsysDataType(
5,
{// S1S0      CA         TT         AC           S0S1
  0.500,      0.116,     0.000,     0.145,      0.000,
  0.116,      0.250,    -0.152,     0.000,      0.145,
  0.000,     -0.152,     0.000,     0.133,      0.000,
  0.145,      0.000,     0.133,     0.250,      0.116,
  0.000,      0.145,     0.000,     0.116,      0.500,
},
"eV"
);

const HsysDataType HFCP_data = HsysDataType(
9,
{
15338.00,     -7.10,      0.00,     -3.90,      0.50,      4.40,    -25.00,     69.00,     -3.30,
   -7.10,  15292.00,     10.00,      5.70,     -0.80,    -29.00,     -7.20,      8.60,     -1.80,
    0.00,     10.00,  16100.00,     -5.10,      0.60,     62.00,      4.00,     -1.80,      0.70,
   -3.90,      5.70,     -5.10,  15347.00,      9.90,     -0.90,      0.10,      2.40,      1.00,
    0.50,     -0.80,      0.60,      9.90,  15358.00,      0.60,     -2.90,     -0.80,      0.10,
    4.40,    -29.00,     62.00,     -0.90,      0.60,  15315.00,     -1.00,      0.50,     -1.70,
  -25.00,     -7.20,      4.00,      0.10,     -2.90,     -1.00,  15329.00,     18.00,      4.20,
   69.00,      8.60,     -1.80,      2.40,     -0.80,      0.50,     18.00,  16183.00,     -1.50,
   -3.30,     -1.80,      0.70,      1.00,      0.10,     -1.70,      4.20,     -1.50,  15337.00,
},
"cm^-1"
);

const std::map<std::string, const HsysDataType&> Hsys_Dict = {
    {"FMO",  HFMO_data},
    {"SF3a", HSF3a_data},
    {"SF3b", HSF3b_data},
    {"SF5a", HSF5a_data},
    {"SF5b", HSF5b_data},
    {"FCP",  HFCP_data},
};

//-----------------------------------------------------------------------------
// frequency data for ZnPc

const double ZnPc_spectrum_data[] = {
//  omega (cm-1)     dQe1 (au)      dQe2 (au)    dQa (au)       dQc (au)
    106.2802444f,   97.29595f,     75.82228f,     0.81151f,    165.41822f,
    110.1720286f,  -38.26760f,    125.83777f,   -72.82098f,    -19.72656f,
    112.2572758f, -139.68045f,    115.06660f,    21.86747f,   -238.51311f,
    114.2586162f,   30.14271f,    -75.58477f,   -25.35368f,    124.44212f,
    116.3195834f,   35.88833f,     65.85841f,    28.02601f,     29.52521f,
    125.1028924f,  -55.01157f,     59.25802f,   -42.49246f,    -75.29227f,
    132.3893894f,   61.04801f,      6.43095f,   -22.38562f,    105.71757f,
    143.8687718f,    1.19207f,     85.06128f,   -11.03781f,     15.03711f,
    159.4326153f,   38.13253f,    -32.75415f,    -0.49260f,     61.43770f,
    170.8340249f,    0.02535f,      7.43129f,   -19.26225f,     10.17824f,
    174.8424221f,  -10.84719f,      5.33402f,    13.58482f,    -23.96034f,
    193.5569230f,  -25.12984f,     22.07416f,     5.28198f,    -49.46737f,
    211.6303145f,   -9.51403f,      8.52975f,     7.93313f,    -27.64570f,
    217.0539113f,   44.25112f,    -60.90079f,   -16.91299f,     92.20615f,
    228.8517517f,    1.59406f,      2.31405f,    -7.75622f,      7.79256f,
    231.0446713f,    2.95458f,     -8.56857f,     2.79974f,      7.48081f,
    257.5719359f,   -9.40387f,      7.99035f,     0.51438f,     -9.42058f,
    258.7085837f,   11.33798f,      1.17096f,    -3.02328f,     21.27225f,
    260.9755991f,  -10.63671f,      1.29828f,   -15.09577f,     -3.48336f,
    262.8607320f,   -3.58748f,     -1.13980f,     6.06958f,    -13.89167f,
    264.9794173f,  -11.07385f,      0.85887f,     1.66243f,    -19.17975f,
    268.4090913f,    9.68372f,     -6.54827f,    -4.97072f,     18.23984f,
    269.1409612f,  -17.38200f,    -10.66274f,    -7.13077f,    -21.13649f,
    278.7814562f,  -15.08920f,     -9.70579f,    -2.38310f,    -17.32810f,
    305.9533016f,   17.82007f,     -0.13462f,     9.71484f,     20.10473f,
    311.3247683f,  -12.98714f,      9.72310f,     9.03666f,    -31.70448f,
    314.0495424f,   11.44256f,      4.69464f,     0.73164f,     14.56426f,
    318.0887964f,   -2.42317f,     18.93640f,     1.94790f,     -7.17885f,
    366.3463888f,    2.75174f,      1.32362f,    -0.78404f,      5.21707f,
    460.2578629f,    8.39669f,     -4.30853f,     8.02608f,      7.43944f,
    480.1717142f,    0.91565f,     -2.21277f,    -2.51564f,      5.02030f,
    481.3982027f,    2.73538f,     -0.77444f,     3.63185f,     -2.07062f,
    489.8187267f,   -0.90228f,     -3.05039f,    -4.36590f,      4.02725f,
    493.1048474f,   -2.77137f,     -2.60973f,    -6.61593f,      2.83321f,
    502.7739938f,   -5.76734f,      1.08901f,    -2.01003f,     -7.52878f,
    511.1644126f,   -1.08122f,      2.48931f,     1.84475f,     -4.59812f,
    515.2582199f,   -1.25910f,     -4.82957f,     0.20530f,     -1.21778f,
    523.4740407f,   -1.14505f,      0.10491f,     2.90629f,     -3.89135f,
    532.2997877f,   -0.22725f,     -4.04913f,    -2.36274f,      1.63847f,
    550.6557760f,   -1.38815f,      1.02948f,     2.29429f,     -4.01538f,
    568.3871318f,   -3.42659f,      1.59023f,    -0.51923f,     -4.01723f,
    586.1321159f,   -2.04818f,      0.06912f,    -0.42732f,     -2.95840f,
    588.8663746f,    1.79132f,     -2.60553f,    -1.03950f,      3.39342f,
    590.9220803f,   -0.80315f,      3.20086f,     0.48248f,     -2.60831f,
    606.3430628f,    2.61012f,     -2.12036f,    -1.18101f,      6.39251f,
    625.2758063f,   -3.19259f,      4.54016f,     1.57720f,     -7.37451f,
    650.8532649f,    5.22053f,     -4.54791f,     0.16183f,      9.60870f,
    653.3016531f,    0.73542f,      2.71106f,     2.63225f,     -1.57937f,
    655.9512632f,    2.35452f,      2.24886f,     0.34468f,      2.65702f,
    668.6851921f,    1.06886f,      0.41799f,     1.26048f,     -0.01544f,
    672.1833939f,   -1.12147f,     -1.25424f,    -0.98583f,     -0.82326f,
    696.2209400f,   -1.36071f,      1.52683f,    -0.06381f,     -2.54487f,
    699.8492546f,   -2.23777f,      2.27324f,     1.01551f,     -5.53680f,
    714.1638626f,    4.97853f,     -2.35194f,    -0.32188f,      8.94886f,
    723.1146785f,   -2.72478f,      4.01181f,    -0.46385f,     -4.84547f,
    752.9619567f,    0.12746f,     -0.82531f,     0.51341f,     -0.09706f,
    757.2677660f,   -2.42099f,      0.11921f,    -0.49268f,     -3.08814f,
    766.0208512f,   -2.10776f,      3.51735f,    -0.06457f,     -4.18243f,
    767.8144225f,   -2.50669f,      1.96146f,     0.31424f,     -4.63742f,
    770.5503723f,    3.00340f,     -1.25673f,     1.30536f,      3.26488f,
    770.9939981f,    1.14505f,      0.25302f,    -0.69781f,      2.44493f,
    803.6123060f,   -0.00470f,      1.96620f,    -0.58942f,     -0.00316f,
    805.2554405f,    1.19062f,     -0.48842f,    -0.98426f,      2.61899f,
    807.0924091f,   -2.11879f,      1.42503f,     0.32192f,     -4.19529f,
    808.6533676f,   -0.06051f,      0.76128f,     1.30053f,     -1.67815f,
    809.5662146f,    1.03663f,      0.59773f,     1.38159f,      0.48021f,
    819.2342830f,   -2.57789f,      0.94826f,     1.36511f,     -5.06476f,
    823.4575108f,   -0.51732f,      1.16468f,    -1.22861f,     -0.25966f,
    825.7239032f,    1.06567f,     -0.35199f,    -0.49313f,      2.11631f,
    830.5380585f,   -0.48293f,      1.20339f,     1.36140f,     -2.54250f,
    836.1567258f,    1.33868f,     -0.88915f,    -0.79105f,      2.63812f,
    840.3993083f,   -2.60427f,      2.89046f,    -3.59730f,     -0.54815f,
    864.8001932f,    2.75749f,     -2.68995f,     0.41622f,      4.11860f,
    866.3892393f,    0.73853f,      0.69629f,     0.66178f,      0.34727f,
    894.1016226f,    0.44810f,     -1.23210f,    -0.81067f,      1.67256f,
    896.1589997f,    1.99144f,     -1.39055f,     0.42656f,      3.06872f,
    934.0062693f,    1.15574f,      1.14592f,     0.57683f,      0.97775f,
    944.1077175f,    0.75398f,     -0.62475f,    -0.07808f,      0.92367f,
    960.0613062f,   -0.61503f,     -0.79042f,    -0.98132f,      0.23341f,
    970.0614214f,   -0.79993f,      1.09451f,     0.51233f,     -2.04221f,
    974.5265388f,   -1.38431f,     -0.87196f,    -0.59962f,     -2.15385f,
    1006.814264f,   -0.82390f,     -0.34677f,    -0.50642f,     -0.51922f,
    1008.247028f,   -0.53788f,      0.93439f,    -0.27263f,     -1.25490f,
    1009.437487f,    0.37261f,      0.05652f,    -0.52722f,      1.04209f,
    1010.976965f,    0.40397f,      0.07769f,    -1.09373f,      1.54691f,
    1025.201257f,    1.39190f,     -0.98034f,     0.45652f,      2.34727f,
    1029.609527f,    0.42646f,     -0.66743f,     0.47557f,      0.02732f,
    1039.580526f,   -1.22084f,     -0.64685f,    -0.03026f,     -1.92779f,
    1044.732128f,   -1.62708f,      0.10744f,    -0.28653f,     -2.21938f,
    1052.668754f,   -0.86995f,      1.32345f,    -0.58761f,     -0.95750f,
    1060.936497f,   -0.46059f,      1.25590f,    -0.66675f,     -0.41921f,
    1068.768982f,   -1.32630f,      1.01968f,     0.55038f,     -2.78594f,
    1081.198536f,    0.51735f,      0.44613f,    -0.31385f,      1.29410f,
    1083.396094f,   -0.41512f,      0.03959f,     0.23595f,     -2.01311f,
    1097.348412f,    0.09376f,     -1.91986f,     0.23665f,      0.01283f,
    1099.625188f,   -0.97699f,     -1.10243f,    -0.65178f,     -0.22545f,
    1109.926019f,   -0.71269f,      0.81625f,     0.15056f,     -1.08619f,
    1115.738669f,    1.10802f,      0.72932f,    -0.06324f,      1.53514f,
    1135.233738f,   -0.14811f,      0.66607f,     0.96673f,     -1.15858f,
    1153.229087f,   -0.28418f,     -0.92285f,    -0.76155f,      0.42342f,
    1158.631599f,    0.44910f,     -0.49960f,    -0.02209f,      0.72821f,
    1171.264590f,    0.15724f,     -0.14961f,     0.01907f,      0.21797f,
    1182.868329f,   -0.05154f,      0.06754f,     0.69897f,     -1.46627f,
    1189.048393f,   -0.23214f,      0.37951f,     0.94777f,     -1.20924f,
    1195.123919f,   -0.24682f,     -0.27359f,     0.44994f,     -0.09501f,
    1201.455595f,   -0.02033f,     -0.24523f,     0.99607f,     -1.03825f,
    1204.627121f,    0.14454f,      0.71027f,    -0.79437f,      1.32960f,
    1216.412737f,    0.26471f,     -0.27625f,     0.24499f,      0.31737f,
    1225.537844f,   -0.37213f,      0.51213f,     0.17534f,     -0.86203f,
    1231.965553f,   -0.00460f,      0.41454f,    -0.02741f,     -0.12491f,
    1243.037507f,   -0.46418f,      1.16825f,    -0.45864f,     -0.52666f,
    1263.773969f,   -1.19285f,      0.60010f,     0.09389f,     -2.13924f,
    1282.053260f,    0.54684f,     -0.28687f,     0.14407f,      0.49546f,
    1316.382242f,    1.42735f,     -1.15505f,    -0.30904f,      2.53008f,
    1327.763456f,    0.08953f,     -0.73964f,    -0.75947f,      1.45172f,
    1343.585774f,   -0.48373f,     -0.24899f,    -0.13022f,     -0.41777f,
    1359.154118f,    0.19567f,      0.06169f,    -0.19635f,      0.30206f,
    1374.344466f,   -0.72852f,      1.02462f,     0.52248f,     -1.70321f,
    1382.033842f,   -0.19488f,      0.51110f,    -0.05630f,     -0.45606f,
    1383.160412f,   -0.08157f,     -0.07344f,    -0.40806f,      0.26384f,
    1393.749832f,   -0.66493f,      0.22718f,    -0.01211f,     -0.98003f,
    1395.373078f,   -0.17996f,      0.32401f,    -0.55990f,      0.27163f,
    1399.571482f,   -0.65968f,      0.23693f,    -0.11605f,     -0.77089f,
    1401.253178f,   -0.51310f,      0.15372f,    -0.08293f,     -0.66440f,
    1455.713748f,   -0.66732f,     -0.02239f,    -0.77857f,     -0.32368f,
    1459.792187f,    0.20154f,     -0.13356f,    -0.15123f,      0.44881f,
    1465.479530f,   -0.07877f,      0.11337f,     0.64871f,     -0.74746f,
    1485.754030f,    0.69712f,     -0.16781f,     0.27350f,      1.04100f,
    1503.575909f,    0.55013f,     -0.25736f,    -0.01047f,      1.23199f,
    1510.233758f,   -0.07918f,     -0.04858f,    -0.11400f,      0.07122f,
    1514.636291f,   -0.23103f,      0.22651f,     0.48756f,     -0.70304f,
    1521.657499f,    0.41139f,     -1.11291f,     0.17063f,      0.62011f,
    1527.359282f,    0.36561f,     -0.87079f,    -0.61748f,      1.21011f,
    1531.401226f,    0.34318f,     -0.67499f,    -0.16361f,      0.59404f,
    1534.934626f,    0.09147f,      0.22461f,     0.26600f,     -0.14700f,
    1536.257216f,   -0.02142f,      0.87611f,     0.30075f,     -0.64509f,
    1546.329687f,   -0.06890f,     -0.11529f,    -0.24589f,      0.09291f,
    1554.882756f,    0.93771f,     -0.49254f,    -0.13646f,      1.52761f,
    1561.235400f,    0.14834f,     -0.16647f,     0.27049f,     -0.09199f,
    1572.653108f,   -0.39897f,      0.22584f,    -0.20867f,     -0.56827f,
    1619.973495f,   -0.20867f,      0.04763f,    -0.00847f,     -0.41852f,
    1662.010742f,   -0.31553f,     -0.23058f,     0.42219f,     -0.94173f,
    1664.600537f,   -0.03392f,      0.25147f,    -0.61952f,      0.53174f,
    1665.366122f,    0.78883f,     -0.31026f,    -0.17075f,      1.46238f,
    1670.804633f,    0.17980f,      0.35728f,     0.53637f,     -0.34548f,
    1692.460667f,   -0.35286f,      0.31688f,    -0.33878f,     -0.14130f,
    1695.542193f,    0.16692f,      0.03551f,     0.11012f,     -0.03993f,
    1696.743235f,   -0.59553f,      0.58739f,    -0.17863f,     -0.91149f,
    1702.383106f,   -0.21724f,     -0.21830f,    -0.16298f,     -0.09334f,
    3181.504606f,    0.03366f,     -0.00499f,    -0.00123f,      0.04147f,
    3181.819899f,    0.05444f,     -0.02213f,    -0.02803f,      0.11617f,
    3182.757570f,   -0.03325f,      0.08713f,    -0.03670f,     -0.10112f,
    3183.148324f,    0.09351f,     -0.02241f,     0.06772f,      0.05806f,
    3197.565372f,   -0.05808f,      0.13654f,     0.05451f,     -0.26417f,
    3200.463538f,    0.08094f,     -0.04535f,    -0.00602f,      0.15732f,
    3211.098354f,   -0.11812f,      0.06192f,    -0.05479f,     -0.13213f,
    3212.704292f,    0.06084f,     -0.12158f,    -0.06442f,      0.22065f,
    3225.191208f,   -0.06833f,      0.09260f,    -0.05254f,     -0.03295f,
    3225.652577f,    0.05273f,      0.08327f,    -0.13254f,      0.19360f,
    3234.176471f,   -0.02735f,     -0.02335f,     0.07251f,     -0.10434f,
    3262.016821f,   -0.01111f,     -0.01075f,    -0.04992f,      0.01495f,
    3263.208170f,   -0.06869f,      0.15648f,     0.00999f,     -0.14098f,
    3273.572099f,   -0.00280f,      0.05260f,    -0.06512f,      0.10657f,
    3278.239487f,   -0.01787f,      0.07304f,    -0.12763f,      0.18638f,
    3310.787774f,   -0.04876f,     -0.00944f,     0.07285f,     -0.15383f,
};

//-------------------------------------------------------------------------------------------------

using SpecDataType = std::tuple<std::size_t, 
    const std::vector<std::tuple<const std::string, const double, const double>>, 
    const std::string, const std::string>;

const SpecDataType B850_spectrum_data = SpecDataType(
50,
{//         Omegas       S_HR (Huang−Rhys factors)
{"WS",      84.0e0,      0.0151e0},
{"WS",     167.0e0,      0.0081e0},
{"WS",     183.0e0,      0.0072e0},
{"WS",     191.0e0,      0.0196e0},
{"WS",     214.0e0,      0.0046e0},
{"WS",     239.0e0,      0.0078e0},
{"WS",     256.0e0,      0.0055e0},
{"WS",     345.0e0,      0.0161e0},
{"WS",     368.0e0,      0.0060e0},
{"WS",     388.0e0,      0.0041e0},
{"WS",     407.0e0,      0.0052e0},
{"WS",     423.0e0,      0.0029e0},
{"WS",     442.0e0,      0.0023e0},
{"WS",     473.0e0,      0.0017e0},
{"WS",     506.0e0,      0.0016e0},
{"WS",     565.0e0,      0.0081e0},
{"WS",     587.0e0,      0.0039e0},
{"WS",     623.0e0,      0.0058e0},
{"WS",     684.0e0,      0.0023e0},
{"WS",     696.0e0,      0.0025e0},
{"WS",     710.0e0,      0.0018e0},
{"WS",     727.0e0,      0.0266e0},
{"WS",     776.0e0,      0.0095e0},
{"WS",     803.0e0,      0.0042e0},
{"WS",     845.0e0,      0.0025e0},
{"WS",     858.0e0,      0.0025e0},
{"WS",     890.0e0,      0.0284e0},
{"WS",     915.0e0,      0.0048e0},
{"WS",     967.0e0,      0.0027e0},
{"WS",     980.0e0,      0.0031e0},
{"WS",    1001.0e0,      0.0040e0},
{"WS",    1019.0e0,      0.0097e0},
{"WS",    1066.0e0,      0.0025e0},
{"WS",    1089.0e0,      0.0021e0},
{"WS",    1105.0e0,      0.0021e0},
{"WS",    1117.0e0,      0.0103e0},
{"WS",    1137.0e0,      0.0042e0},
{"WS",    1158.0e0,      0.0103e0},
{"WS",    1180.0e0,      0.0025e0},
{"WS",    1190.0e0,      0.0031e0},
{"WS",    1211.0e0,      0.0025e0},
{"WS",    1229.0e0,      0.0021e0},
{"WS",    1252.0e0,      0.0025e0},
{"WS",    1289.0e0,      0.0087e0},
{"WS",    1378.0e0,      0.0086e0},
{"WS",    1466.0e0,      0.0021e0},
{"WS",    1519.0e0,      0.0017e0},
{"WS",    1539.0e0,      0.0023e0},
{"WS",    1648.0e0,      0.0025e0},
{"WS",    1680.0e0,      0.0027e0},
},
"cm^-1", "1"
);

const SpecDataType PBI_spectrum_data = SpecDataType(
28,
{//      Omegas(cm^-1)  S_HR (Huang−Rhys factors)
{"WS",     7.0e0,       0.015e0},
{"WS",    10.0e0,       0.028e0},
{"WS",    12.0e0,       0.449e0},
{"WS",    14.0e0,       3.800e0},
{"WS",    26.0e0,       1.169e0},
{"WS",    26.0e0,       0.337e0},
{"WS",    32.0e0,       0.317e0},
{"WS",    46.0e0,       0.601e0},
{"WS",    50.0e0,       0.033e0},
{"WS",    55.0e0,       0.045e0},
{"WS",    63.0e0,       0.023e0},
{"WS",    79.0e0,       0.033e0},
{"WS",   104.0e0,       0.029e0},
{"WS",   183.0e0,       0.040e0},
{"WS",   206.0e0,       0.197e0},
{"WS",   211.0e0,       0.215e0},
{"WS",   272.0e0,       0.027e0},
{"WS",   416.0e0,       0.013e0},
{"WS",   483.0e0,       0.021e0},
{"WS",   540.0e0,       0.019e0},
{"WS",   552.0e0,       0.037e0},
{"WS",   643.0e0,       0.010e0},
{"WS",   751.0e0,       0.033e0},
{"WS",  1325.0e0,       0.010e0},
{"WS",  1371.0e0,       0.208e0},
{"WS",  1469.0e0,       0.042e0},
{"WS",  1570.0e0,       0.083e0},
{"WS",  1628.0e0,       0.039e0},
},
"cm^-1", "1"
);


const SpecDataType Rubrene_spectrum_data = SpecDataType(
9,
{//      Omegas (eV)     g_factor
{"WG",   0.010e0,        0.96e0},
{"WG",   0.027e0,        0.38e0},
{"WG",   0.078e0,        0.25e0},
{"WG",   0.124e0,        0.20e0},
{"WG",   0.149e0,        0.15e0},
{"WG",   0.167e0,        0.31e0},
{"WG",   0.169e0,        0.13e0},
{"WG",   0.190e0,        0.20e0},
{"WG",   0.198e0,        0.31e0},
},
"eV", "1"
);

/////////////// CI MODELS //////////////////////

const double CI_Pyr2_data[] = { // all in ev
      0.262f,           3.94f,           4.84f, // lc, E1,  E2
      0.118f,           0.0f,            0.0f,  // wj, k1j, k2j (j=0,1)
      0.074f,           -0.105f,         0.149f,
};

const double CI_Pyr3_data[] = { // all in ev
      0.262f,           3.94f,           4.84f, // lc, E1,  E2
      0.118f,           0.0f,            0.0f,  // wj, k1j, k2j (j=0,2)
      0.074f,           -0.105f,         0.149f,
      0.126f,           0.037f,         -0.254f,
};

const double CI_Pyr4_data[] = { // all in ev
      0.1825f,         -0.4617f,         0.4617f,  // lc, E1,  E2
      0.0936f,          0.0000f,         0.0000f,  // wj, k1j, k2j (j=0,3)
      0.0740f,         -0.0964f,         0.1194f,
      0.1273f,          0.0470f,         0.2012f,
      0.1568f,          0.1594f,         0.0484f,
};

const double CI_Pyr24_data[] = { // all in ev
      0.1825f,         -0.4617f,         0.4617f,  // lc, E1,  E2
      0.0936f,          0.0000f,         0.0000f,  // wj, k1j, k2j (j=0,23)
      0.0740f,         -0.0964f,         0.1194f,
      0.1273f,          0.0470f,         0.2012f,
      0.1568f,          0.1594f,         0.0484f,
      0.1347f,          0.0308f,        -0.0308f,
      0.3431f,          0.0782f,        -0.0782f,
      0.1157f,          0.0261f,        -0.0261f,
      0.3242f,          0.0717f,        -0.0717f,
      0.3621f,          0.0780f,        -0.0780f,
      0.2673f,          0.0560f,        -0.0560f,
      0.3052f,          0.0625f,        -0.0625f,
      0.0968f,          0.0188f,        -0.0188f,
      0.0589f,          0.0112f,        -0.0112f,
      0.0400f,          0.0069f,        -0.0069f,
      0.1726f,          0.0265f,        -0.0265f,
      0.2863f,          0.0433f,        -0.0433f,
      0.2484f,          0.0361f,        -0.0361f,
      0.1536f,          0.0210f,        -0.0210f,
      0.2105f,          0.0281f,        -0.0281f,
      0.0778f,          0.0102f,        -0.0102f,
      0.2294f,          0.0284f,        -0.0284f,
      0.1915f,          0.0196f,        -0.0196f,
      0.4000f,          0.0306f,        -0.0306f,
      0.3810f,          0.0269f,        -0.0269f,
};

const double CI_BEN5_data[] = { // all in ev
      0.0000f,          9.750f,         11.84f,          12.44f,
      0.1230f,         -0.042f,         -0.042f,         -0.301f,
      0.1980f,         -0.246f,          0.242f,          0.000f,
      0.0750f,         -0.125f,          0.100f,          0.000f,
      0.0880f,          0.000f,          0.000f,          0.000f,
      0.1200f,          0.000f,          0.000f,          0.000f,
};

//----------------------------------------------------------------------

//-----------------------------------------------------------------------------
// for FCP

// clang-format on
#endif  // HamiltonianData_H
