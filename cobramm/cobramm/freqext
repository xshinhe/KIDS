#!/bin/bash
# coding=utf-8

# this script creates the submitter 'run', to run QM computations with Molcas, Gaussian or Molpro
# the variables used here should be set in the .cobramm_profile configuration script
# (otherwise the necessary environmental variables should have already been defined in the parent shell)

# read an arbitrary number of arguments
args=("$@")

# assign and remove from "args" the first arguments
FAKE_SP=${args[0]}       # FAKE_SP if activated (1) a .log file is copied inside the geomXXX folder insead of launching a SP
BASEDIR=${args[1]}       # BASEDIR is the parent directory with the Cobram computation
SOFTWARE=${args[2]}      # SOFTWARE is the code to run in parallel
MEMORY=${args[3]}        # MEMORY available to the code
DIR="geom${args[4]}"     # DIR is the geomXXX directory where the submitter file "run" will be stored
GEOMS=("${args[@]:5}")   # GEOMS is an array of jobs to run sequentially

echo "#!/bin/bash " > $BASEDIR/$DIR/run

for N in ${GEOMS[@]}
do

  SUB_DIR="geom$N"
  echo "   export HomeDir=$BASEDIR/$SUB_DIR
    export CurrDir=$BASEDIR/$SUB_DIR
    export WorkDir=$BASEDIR/$SUB_DIR/tmp
    mkdir $BASEDIR/$SUB_DIR/tmp"  >> $BASEDIR/$DIR/run

  if [[ $SOFTWARE == 'molcas' ]]
  then

    if [[ -e "$BASEDIR/MOLCAS/molcas.RasOrb" ]]; then
      echo "cp $BASEDIR/MOLCAS/molcas.RasOrb $BASEDIR/$SUB_DIR/molcas.RasOrb" >> $BASEDIR/$DIR/run
    elif [[ -e "$BASEDIR/INPORB" ]]; then
      echo "cp $BASEDIR/INPORB $BASEDIR/$SUB_DIR/molcas.RasOrb " >> $BASEDIR/$DIR/run
    fi
	  
    if [[ -e "$BASEDIR/MOLCAS/molcas_tmp.JobIph" ]]; then
      echo "cp $BASEDIR/MOLCAS/molcas_tmp.JobIph $BASEDIR/$SUB_DIR/tmp/molcas.JobIph " >> $BASEDIR/$DIR/run
    elif [[ -e "$BASEDIR/MOLCAS/molcas.JobIph" ]]; then
      echo "cp $BASEDIR/MOLCAS/molcas.JobIph $BASEDIR/$SUB_DIR/tmp/molcas.JobIph " >> $BASEDIR/$DIR/run
    fi

    if [[ -e "$BASEDIR/MOLCAS/molcas_rr.JobMix" ]]; then
      echo "cp $BASEDIR/MOLCAS/molcas_rr.JobMix $BASEDIR/$SUB_DIR/tmp/molcas_rr.JobMix " >> $BASEDIR/$DIR/run
    fi

    if [[ -e "$BASEDIR/MOLCAS/molcas_r.JobIph" ]]; then
      echo "cp $BASEDIR/MOLCAS/molcas_r.JobIph $BASEDIR/$SUB_DIR/tmp/molcas_r.JobIph " >> $BASEDIR/$DIR/run
    elif [[ -e "$BASEDIR/MOLCAS/molcas_r.JobMix" ]]; then
      echo "cp $BASEDIR/MOLCAS/molcas_r.JobMix $BASEDIR/$SUB_DIR/tmp/molcas_r.JobMix " >> $BASEDIR/$DIR/run
    fi

    echo "    export MOLCAS_CPUS=1
    export MOLCAS_MEM=$MEMORY
    export Project=molcas
    export MOLCAS_OUTPUT=$BASEDIR/$SUB_DIR" >> $BASEDIR/$DIR/run
    if [[ $FAKE_SP -eq 1 ]]
    then
	    echo "cp $BASEDIR/SP.log $BASEDIR/$SUB_DIR/molcas.log" >> $BASEDIR/$DIR/run	
    else
	    echo "nice -10 \$MOLCAS_SCRIPT $BASEDIR/$SUB_DIR/seward.input > $BASEDIR/$SUB_DIR/molcas.log 2>$BASEDIR/$SUB_DIR/molcas.err" >> $BASEDIR/$DIR/run
    fi
    echo "if grep 'Happy landing!' --quiet $BASEDIR/$SUB_DIR/molcas.log; then touch $BASEDIR/$SUB_DIR/SUCCESS;
    elif tac $BASEDIR/$SUB_DIR/molcas.log | grep -q 'Non-zero return code' ; then touch $BASEDIR/$SUB_DIR/FAIL;
    elif tac $BASEDIR/$SUB_DIR/molcas.log | grep -q 'Aborting..' ; then touch $BASEDIR/$SUB_DIR/FAIL;
    else touch $BASEDIR/$SUB_DIR/SUCCESS; fi
    rm -rf $BASEDIR/$SUB_DIR/tmp" >> $BASEDIR/$DIR/run

  elif [[ $SOFTWARE == 'molpro' ]]
  then

    echo "    cp $BASEDIR/work.chk $BASEDIR/$SUB_DIR/.
    \$MOLPRO_EXE -d$BASEDIR/$SUB_DIR -I$BASEDIR/$SUB_DIR/tmp -W$BASEDIR/$SUB_DIR < $BASEDIR/$SUB_DIR/molpro.input > $BASEDIR/$SUB_DIR/molpro.log 2>$BASEDIR/$SUB_DIR/molpro.err
    if grep 'Variable memory released' --quiet $BASEDIR/$SUB_DIR/molpro.log; then touch $BASEDIR/$SUB_DIR/SUCCESS; else touch $BASEDIR/$SUB_DIR/FAIL; fi" >> $BASEDIR/$DIR/run

  elif [[ $SOFTWARE == 'gaussian' ]]
  then

    echo "    cp $BASEDIR/gaussian-QM.chk $BASEDIR/$SUB_DIR/.
    export GAUSS_SCRDIR=\$WorkDir
    # it is necessary to enter in the directory as Gaussian looks for the .chk in the directory from where the command is executed
    cd $BASEDIR/$SUB_DIR
    source $BASEDIR/.gaussian_profile_qm
    nice -10 \$GAUSSIAN_EXE < $BASEDIR/$SUB_DIR/gaussian-QM.com > $BASEDIR/$SUB_DIR/gaussian-QM.log 2>$BASEDIR/$SUB_DIR/gaussian-QM.err
    cd ..
    if grep 'Normal termination' --quiet $BASEDIR/$SUB_DIR/gaussian-QM.log; then touch $BASEDIR/$SUB_DIR/SUCCESS; else touch $BASEDIR/$SUB_DIR/FAIL; fi
    rm -f $BASEDIR/$SUB_DIR/gaussian-QM.rwf
    rm -rf $BASEDIR/$SUB_DIR/tmp" >> $BASEDIR/$DIR/run
  fi

done
